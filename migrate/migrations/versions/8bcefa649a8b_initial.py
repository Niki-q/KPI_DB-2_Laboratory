"""initial

Revision ID: 8bcefa649a8b
Revises: 
Create Date: 2023-05-25 21:56:51.558244

"""
import logging
import uuid
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '8bcefa649a8b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    logger = logging.getLogger('alembic.env')
    logger.info("Initialization creating tables from new structure...")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('educational_institutions',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TypeName', sa.String(), nullable=True),
    sa.Column('AreaName', sa.String(), nullable=True),
    sa.Column('TerName', sa.String(), nullable=True),
    sa.Column('Parent', sa.String(), nullable=True),
    sa.Column('Name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ID', name='pk_educational_institutions')
    )
    logger.info("Table created - educational_institutions")
    op.create_table('points_of_observation',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('RegName', sa.String(), nullable=True),
    sa.Column('AreaName', sa.String(), nullable=True),
    sa.Column('TerName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ID', name='pk_points_of_observation')
    )
    logger.info("Table created - points_of_observation")
    op.create_table('territories',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('TypeName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ID', name='pk_territories')
    )
    logger.info("Table created - territories")
    op.create_table('participants',
    sa.Column('ID', sa.String(length=36), nullable=False),
    sa.Column('Birth', sa.Integer(), nullable=True),
    sa.Column('SexTypeName', sa.String(), nullable=True),
    sa.Column('RegName', sa.String(), nullable=True),
    sa.Column('AreaName', sa.String(), nullable=True),
    sa.Column('Ter_id', sa.Integer(), nullable=True),
    sa.Column('ClassProfileName', sa.String(), nullable=True),
    sa.Column('ClassLangName', sa.String(), nullable=True),
    sa.Column('EO_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['EO_id'], ['educational_institutions.ID'], name='fk_participants_educational_institutions', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['Ter_id'], ['territories.ID'], name='fk_participants_territories', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ID', name='pk_participants')
    )
    logger.info("Table created - participants")
    op.create_table('testings',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Part_ID', sa.String(length=36), nullable=True),
    sa.Column('Point_ID', sa.Integer(), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Test', sa.String(), nullable=True),
    sa.Column('TestStatus', sa.String(), nullable=True),
    sa.Column('Ball100', sa.Float(), nullable=True),
    sa.Column('Ball12', sa.Float(), nullable=True),
    sa.Column('Ball', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['Part_ID'], ['participants.ID'], name='fk_testings_participants',
                            ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['Point_ID'], ['points_of_observation.ID'],
                            name='fk_testings_points_of_observation', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ID', name='pk_testings')
    )
    logger.info("Table created - testings")


def downgrade():
    pass