"""initial

Revision ID: 8bcefa649a8b
Revises: 
Create Date: 2023-05-25 21:56:51.558244

"""
import uuid

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8bcefa649a8b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('educational_institutions',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TypeName', sa.String(), nullable=True),
    sa.Column('AreaName', sa.String(), nullable=True),
    sa.Column('TerName', sa.String(), nullable=True),
    sa.Column('Parent', sa.String(), nullable=True),
    sa.Column('Name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('points_of_observation',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('RegName', sa.String(), nullable=True),
    sa.Column('AreaName', sa.String(), nullable=True),
    sa.Column('TerName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('territories',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('TypeName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('participants',
    sa.Column('ID', sa.String(36), nullable=False, default=str(uuid.uuid4())),
    sa.Column('Birth', sa.Integer(), nullable=True),
    sa.Column('SexTypeName', sa.String(), nullable=True),
    sa.Column('RegName', sa.String(), nullable=True),
    sa.Column('AreaName', sa.String(), nullable=True),
    sa.Column('Ter_id', sa.Integer(), nullable=True),
    sa.Column('ClassProfileName', sa.String(), nullable=True),
    sa.Column('ClassLangName', sa.String(), nullable=True),
    sa.Column('EO_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['EO_id'], ['educational_institutions.ID'], ),
    sa.ForeignKeyConstraint(['Ter_id'], ['territories.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('testings',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Part_ID', sa.String(36), nullable=True),
    sa.Column('Point_ID', sa.Integer(), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Test', sa.String(), nullable=True),
    sa.Column('TestStatus', sa.String(), nullable=True),
    sa.Column('Ball100', sa.Float(), nullable=True),
    sa.Column('Ball12', sa.Float(), nullable=True),
    sa.Column('Ball', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['Part_ID'], ['participants.ID'], ),
    sa.ForeignKeyConstraint(['Point_ID'], ['points_of_observation.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    # op.drop_table('zno_result')
    # ### end Alembic commands ###


def downgrade():
    pass
    # ### end Alembic commands ###
