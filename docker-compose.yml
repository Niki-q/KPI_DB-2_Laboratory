version: "3"

services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - MY

  app:
    profiles: ["csv"]
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      RESULTS_TABLE_NAME: ${RESULTS_TABLE_NAME}
      OUTPUT_FILE_NAME: ${OUTPUT_FILE_NAME}
    volumes:
      - ./app/data:/app/data
    depends_on:
      - db
#      db:
#        condition: service_healthy
    networks:
      - MY

  app-migrate:
    profiles: ["migrate"]
    build:
      context: ./migrate
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      RESULTS_TABLE_NAME: ${RESULTS_TABLE_NAME}
    volumes:
      - ./migrate/results:/app/results
#      - for dev :
      - ./migrate/app.py:/app/app.py
      - ./migrate/models.py:/app/models.py
      - ./migrate/migrations:/app/migrations
    depends_on:
      - db
    networks:
      - MY

  web-app:
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      RESULTS_TABLE_NAME: ${RESULTS_TABLE_NAME}
    restart: always
    ports:
      - "5000:5000"
    volumes:
      #      - for dev :
      - ./web/app.py:/web/app.py
      - ./web/models.py:/web/models.py
      - ./web/templates:/app/templates
    depends_on:
      - db
    networks:
      - MY


  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - MY

volumes:
  db_data:

networks:
  MY:


